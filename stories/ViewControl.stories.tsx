import React from "react";
import { storiesOf, addDecorator } from "@storybook/react";
import { muiTheme } from 'storybook-addon-material-ui';
import { withKnobs, object, text } from '@storybook/addon-knobs';
import { withMarkdownNotes } from '@storybook/addon-notes';
import { withInfo } from "@storybook/addon-info";
import { checkA11y } from '@storybook/addon-a11y'

import { Repository } from '@sensenet/client-core'
import { File, Folder } from "@sensenet/default-content-types";
import { Reducers } from '@sensenet/redux'

import { EditView, NewView, BrowseView } from "../src/components/controls-react";
import { combineReducers, createStore } from "redux";

export const customSchema = [
    {
        ContentTypeName: 'GenericContent',
        DisplayName: 'Content',
        Description: 'This type is the base content type of the Sense/Net ECMS.',
        Icon: 'Content',
        AllowIndexing: true,
        AllowIncrementalNaming: false,
        AllowedChildTypes: [],
        FieldSettings: [
            {
                Name: 'Id',
                FieldClassName: 'SenseNet.ContentRepository.Fields.IntegerField',
                DisplayName: 'Id',
                Description: 'Unique Id for the content.',
                ReadOnly: true,
                Compulsory: false,
                OutputMethod: 0,
                Visible: false,
                VisibleBrowse: 1,
                VisibleEdit: 1,
                VisibleNew: 1,
                DefaultOrder: 0,
                Type: 'IntegerFieldSetting',
            },
            {
                Name: 'ParentId',
                FieldClassName: 'SenseNet.ContentRepository.Fields.IntegerField',
                DisplayName: 'Parent Id',
                Description: 'Id of the parent content.',
                ReadOnly: true,
                Compulsory: false,
                OutputMethod: 0,
                Visible: false,
                VisibleBrowse: 1,
                VisibleEdit: 1,
                VisibleNew: 1,
                DefaultOrder: 0,
                Type: 'IntegerFieldSetting',
            },
            {
                Name: 'OwnerId',
                FieldClassName: 'SenseNet.ContentRepository.Fields.IntegerField',
                DisplayName: 'Owner Id',
                Description: 'Id of the owner.',
                ReadOnly: true,
                Compulsory: false,
                OutputMethod: 0,
                Visible: false,
                VisibleBrowse: 1,
                VisibleEdit: 1,
                VisibleNew: 1,
                DefaultOrder: 0,
                Type: 'IntegerFieldSetting',
            },
            {
                Name: 'Owner',
                FieldClassName: 'SenseNet.ContentRepository.Fields.ReferenceField',
                DisplayName: 'Owner',
                Description: 'Content owner.',
                ReadOnly: false,
                Compulsory: false,
                OutputMethod: 0,
                Visible: false,
                VisibleBrowse: 1,
                VisibleEdit: 1,
                VisibleNew: 1,
                DefaultOrder: 0,
                Type: 'ReferenceFieldSetting',
            },
            {
                Name: 'VersionId',
                FieldClassName: 'SenseNet.ContentRepository.Fields.IntegerField',
                DisplayName: 'Version Id',
                Description: 'Database row Id of current version.',
                ReadOnly: true,
                Compulsory: false,
                OutputMethod: 0,
                Visible: false,
                VisibleBrowse: 1,
                VisibleEdit: 1,
                VisibleNew: 1,
                DefaultOrder: 0,
                Type: 'IntegerFieldSetting',
            },
            {
                Name: 'Type',
                FieldClassName: 'SenseNet.ContentRepository.Fields.NodeTypeField',
                DisplayName: 'Content Type Name',
                Description: 'Content type of the node in the repository.',
                ReadOnly: true,
                Compulsory: false,
                OutputMethod: 0,
                Visible: false,
                VisibleBrowse: 1,
                VisibleEdit: 1,
                VisibleNew: 1,
                DefaultOrder: 0,
                Type: 'NullFieldSetting',
            },
            {
                Name: 'TypeIs',
                FieldClassName: 'SenseNet.ContentRepository.Fields.NodeTypeField',
                DisplayName: 'Ancestor Content Type Names',
                Description: 'Ancestor content types of the node in the repository.',
                ReadOnly: true,
                Compulsory: false,
                OutputMethod: 0,
                Visible: false,
                VisibleBrowse: 1,
                VisibleEdit: 1,
                VisibleNew: 1,
                DefaultOrder: 0,
                Type: 'NullFieldSetting',
            },
            {
                Name: 'Icon',
                FieldClassName: 'SenseNet.ContentRepository.Fields.ShortTextField',
                DisplayName: 'Icon',
                Description: 'Icon',
                ReadOnly: true,
                Compulsory: false,
                OutputMethod: 0,
                Visible: false,
                VisibleBrowse: 1,
                VisibleEdit: 1,
                VisibleNew: 1,
                DefaultOrder: 0,
                Type: 'ShortTextFieldSetting',
            },
            {
                Name: 'Name',
                FieldClassName: 'SenseNet.ContentRepository.Fields.ShortTextField',
                DisplayName: 'Name',
                Description: 'Specify a name that will appear in the address bar of the browser.',
                ReadOnly: false,
                Compulsory: true,
                OutputMethod: 0,
                Visible: true,
                VisibleBrowse: 0,
                VisibleEdit: 0,
                VisibleNew: 0,
                DefaultOrder: 0,
                ControlHint: 'sn:Name',
                Type: 'ShortTextFieldSetting',
            },
            {
                Name: 'CreatedById',
                FieldClassName: 'SenseNet.ContentRepository.Fields.IntegerField',
                DisplayName: 'Created By (Id)',
                Description: 'Id of creator.',
                ReadOnly: true,
                Compulsory: false,
                OutputMethod: 0,
                Visible: false,
                VisibleBrowse: 1,
                VisibleEdit: 1,
                VisibleNew: 1,
                DefaultOrder: 0,
                Type: 'IntegerFieldSetting',
            },
            {
                Name: 'ModifiedById',
                FieldClassName: 'SenseNet.ContentRepository.Fields.IntegerField',
                DisplayName: 'Last Modified By (Id)',
                Description: 'Id of last modifier.',
                ReadOnly: true,
                Compulsory: false,
                OutputMethod: 0,
                Visible: false,
                VisibleBrowse: 1,
                VisibleEdit: 1,
                VisibleNew: 1,
                DefaultOrder: 0,
                Type: 'IntegerFieldSetting',
            },
            {
                Name: 'Version',
                FieldClassName: 'SenseNet.ContentRepository.Fields.VersionField',
                DisplayName: 'Version',
                Description: 'Version number.',
                ReadOnly: true,
                Compulsory: false,
                OutputMethod: 0,
                Visible: false,
                VisibleBrowse: 2,
                VisibleEdit: 2,
                VisibleNew: 2,
                DefaultOrder: 0,
                Type: 'NullFieldSetting',
            },
            {
                Name: 'Path',
                FieldClassName: 'SenseNet.ContentRepository.Fields.ShortTextField',
                DisplayName: 'Path',
                Description: 'Content path in the repository.',
                ReadOnly: true,
                Compulsory: false,
                OutputMethod: 0,
                Visible: false,
                VisibleBrowse: 1,
                VisibleEdit: 1,
                VisibleNew: 1,
                DefaultOrder: 0,
                Type: 'ShortTextFieldSetting',
            },
            {
                Name: 'Depth',
                FieldClassName: 'SenseNet.ContentRepository.Fields.IntegerField',
                DisplayName: 'Tree Depth',
                Description: 'Content level in the tree. Root level is 0.',
                ReadOnly: true,
                Compulsory: false,
                OutputMethod: 0,
                Visible: false,
                VisibleBrowse: 1,
                VisibleEdit: 1,
                VisibleNew: 1,
                DefaultOrder: 0,
                Type: 'IntegerFieldSetting',
            },
            {
                Name: 'InTree',
                FieldClassName: 'SenseNet.ContentRepository.Fields.ShortTextField',
                DisplayName: 'Ancestors',
                Description: 'Ancestor paths.',
                ReadOnly: true,
                Compulsory: false,
                OutputMethod: 0,
                Visible: false,
                VisibleBrowse: 1,
                VisibleEdit: 1,
                VisibleNew: 1,
                DefaultOrder: 0,
                Type: 'ShortTextFieldSetting',
            },
            {
                Name: 'InFolder',
                FieldClassName: 'SenseNet.ContentRepository.Fields.ShortTextField',
                DisplayName: 'Parent Path',
                Description: 'Parent path of the content.',
                ReadOnly: true,
                Compulsory: false,
                OutputMethod: 0,
                Visible: false,
                VisibleBrowse: 1,
                VisibleEdit: 1,
                VisibleNew: 1,
                DefaultOrder: 0,
                Type: 'ShortTextFieldSetting',
            },
            {
                Name: 'IsSystemContent',
                FieldClassName: 'SenseNet.ContentRepository.Fields.BooleanField',
                DisplayName: 'System Content',
                Description: 'This field is true if content is in a system folder/trash or the content is a system folder/file.',
                ReadOnly: true,
                Compulsory: false,
                OutputMethod: 0,
                Visible: false,
                VisibleBrowse: 1,
                VisibleEdit: 1,
                VisibleNew: 1,
                DefaultOrder: 0,
                Type: 'NullFieldSetting',
            },
            {
                Name: 'IsFolder',
                FieldClassName: 'SenseNet.ContentRepository.Fields.BooleanField',
                DisplayName: 'Folder',
                Description: 'This field is true if content can contain other content.',
                ReadOnly: true,
                Compulsory: false,
                OutputMethod: 0,
                Visible: false,
                VisibleBrowse: 1,
                VisibleEdit: 1,
                VisibleNew: 1,
                DefaultOrder: 0,
                Type: 'NullFieldSetting',
            },
            {
                Name: 'DisplayName',
                FieldClassName: 'SenseNet.ContentRepository.Fields.ShortTextField',
                DisplayName: 'Display Name',
                Description: 'Content name. You can set any name you prefer without any restrictions.',
                ReadOnly: false,
                Compulsory: false,
                OutputMethod: 0,
                Visible: true,
                VisibleBrowse: 0,
                VisibleEdit: 0,
                VisibleNew: 0,
                DefaultOrder: 0,
                ControlHint: 'sn:DisplayName',
                Type: 'ShortTextFieldSetting',
            },
            {
                Name: 'Description',
                FieldClassName: 'SenseNet.ContentRepository.Fields.LongTextField',
                DisplayName: 'Description',
                Description: 'Description of the content.',
                ReadOnly: false,
                Compulsory: false,
                OutputMethod: 0,
                Visible: true,
                VisibleBrowse: 0,
                VisibleEdit: 0,
                VisibleNew: 0,
                DefaultOrder: 0,
                ControlHint: 'sn:RichText',
                Type: 'LongTextFieldSetting',
            },
            {
                Name: 'Hidden',
                FieldClassName: 'SenseNet.ContentRepository.Fields.BooleanField',
                DisplayName: 'Hidden',
                Description: 'If checked, content will not show up in navigation.',
                ReadOnly: false,
                Compulsory: false,
                OutputMethod: 0,
                Visible: false,
                VisibleBrowse: 1,
                VisibleEdit: 1,
                VisibleNew: 1,
                DefaultOrder: 0,
                Type: 'NullFieldSetting',
            },
            {
                Name: 'Index',
                FieldClassName: 'SenseNet.ContentRepository.Fields.IntegerField',
                DisplayName: 'Index',
                Description: 'Content order in navigation. Numbers closer to 0 will appear first.',
                ReadOnly: false,
                Compulsory: false,
                OutputMethod: 0,
                Visible: false,
                VisibleBrowse: 2,
                VisibleEdit: 2,
                VisibleNew: 2,
                DefaultOrder: 0,
                Type: 'IntegerFieldSetting',
            },
            {
                Name: 'EnableLifespan',
                FieldClassName: 'SenseNet.ContentRepository.Fields.BooleanField',
                DisplayName: 'Enable Lifespan',
                Description: 'Specify whether you want to define starting and end date for the validity of this content.',
                ReadOnly: false,
                Compulsory: false,
                OutputMethod: 0,
                Visible: false,
                VisibleBrowse: 1,
                VisibleEdit: 1,
                VisibleNew: 1,
                DefaultOrder: 0,
                Type: 'NullFieldSetting',
            },
            {
                DateTimeMode: 2,
                Name: 'ValidFrom',
                FieldClassName: 'SenseNet.ContentRepository.Fields.DateTimeField',
                DisplayName: 'Valid From',
                Description: 'This content will appear on the date you set if lifespan handling is enabled for this content.',
                ReadOnly: false,
                Compulsory: false,
                OutputMethod: 0,
                Visible: false,
                VisibleBrowse: 1,
                VisibleEdit: 1,
                VisibleNew: 1,
                DefaultOrder: 0,
                Type: 'DateTimeFieldSetting',
            },
            {
                DateTimeMode: 2,
                Name: 'ValidTill',
                FieldClassName: 'SenseNet.ContentRepository.Fields.DateTimeField',
                DisplayName: 'Valid Till',
                Description: 'This content will disappear on the date you set if lifespan handling is enabled for this content.',
                ReadOnly: false,
                Compulsory: false,
                OutputMethod: 0,
                Visible: false,
                VisibleBrowse: 1,
                VisibleEdit: 1,
                VisibleNew: 1,
                DefaultOrder: 0,
                Type: 'DateTimeFieldSetting',
            },
            {
                Name: 'AllowedChildTypes',
                FieldClassName: 'SenseNet.ContentRepository.Fields.AllowedChildTypesField',
                DisplayName: 'Allowed child types',
                Description: 'You can get and set which content types are explicitly allowed to be created under this content. It is a local setting.',
                ReadOnly: false,
                Compulsory: false,
                OutputMethod: 0,
                Visible: false,
                VisibleBrowse: 1,
                VisibleEdit: 1,
                VisibleNew: 1,
                DefaultOrder: 0,
                Type: 'NullFieldSetting',
            },
            {
                Name: 'EffectiveAllowedChildTypes',
                FieldClassName: 'SenseNet.ContentRepository.Fields.AllowedChildTypesField',
                DisplayName: 'Effective allowed child types',
                Description: 'You can get which content types are effective allowed to be created under this content. If there is no local setting, the global setting takes effect.',
                ReadOnly: true,
                Compulsory: false,
                OutputMethod: 0,
                Visible: false,
                VisibleBrowse: 1,
                VisibleEdit: 1,
                VisibleNew: 1,
                DefaultOrder: 0,
                Type: 'NullFieldSetting',
            },
            {
                AllowExtraValue: false,
                AllowMultiple: false,
                Options: [
                    {
                        Value: '0',
                        Text: 'Inherited',
                        StoredText: '$Ctd-GenericContent,VersioningMode-0',
                        Enabled: true,
                        Selected: true,
                    },
                    {
                        Value: '1',
                        Text: 'None',
                        StoredText: '$Ctd-GenericContent,VersioningMode-1',
                        Enabled: true,
                        Selected: false,
                    },
                    {
                        Value: '2',
                        Text: 'Major only',
                        StoredText: '$Ctd-GenericContent,VersioningMode-2',
                        Enabled: true,
                        Selected: false,
                    },
                    {
                        Value: '3',
                        Text: 'Major and minor',
                        StoredText: '$Ctd-GenericContent,VersioningMode-3',
                        Enabled: true,
                        Selected: false,
                    },
                ],
                DisplayChoice: 0,
                EnumTypeName: '',
                Name: 'VersioningMode',
                FieldClassName: 'SenseNet.ContentRepository.Fields.VersioningModeField',
                DisplayName: 'Versioning Mode For Current Content',
                Description: 'It shows the versioning mode of the current content.',
                ReadOnly: false,
                Compulsory: false,
                OutputMethod: 0,
                Visible: false,
                VisibleBrowse: 1,
                VisibleEdit: 1,
                VisibleNew: 1,
                DefaultOrder: 0,
                Type: 'ChoiceFieldSetting',
            },
            {
                AllowExtraValue: false,
                AllowMultiple: false,
                Options: [
                    {
                        Value: '0',
                        Text: 'Inherited',
                        StoredText: '$Ctd-GenericContent,InheritableVersioningMode-0',
                        Enabled: true,
                        Selected: true,
                    },
                    {
                        Value: '1',
                        Text: 'None',
                        StoredText: '$Ctd-GenericContent,InheritableVersioningMode-1',
                        Enabled: true,
                        Selected: false,
                    },
                    {
                        Value: '2',
                        Text: 'Major only',
                        StoredText: '$Ctd-GenericContent,InheritableVersioningMode-2',
                        Enabled: true,
                        Selected: false,
                    },
                    {
                        Value: '3',
                        Text: 'Major and minor',
                        StoredText: '$Ctd-GenericContent,InheritableVersioningMode-3',
                        Enabled: true,
                        Selected: false,
                    },
                ],
                DisplayChoice: 0,
                EnumTypeName: '',
                Name: 'InheritableVersioningMode',
                FieldClassName: 'SenseNet.ContentRepository.Fields.InheritableVersioningModeField',
                DisplayName: 'Version history',
                Description: 'Specify whether the system should create a new version whenever you create or modify a content below this content.',
                ReadOnly: false,
                Compulsory: false,
                OutputMethod: 0,
                Visible: false,
                VisibleBrowse: 1,
                VisibleEdit: 1,
                VisibleNew: 1,
                DefaultOrder: 0,
                ControlHint: 'sn:VersioningModeChoice',
                Type: 'ChoiceFieldSetting',
            },
            {
                Name: 'CreatedBy',
                FieldClassName: 'SenseNet.ContentRepository.Fields.ReferenceField',
                DisplayName: 'Created by',
                Description: 'Content creator.',
                ReadOnly: false,
                Compulsory: false,
                OutputMethod: 0,
                Visible: false,
                VisibleBrowse: 1,
                VisibleEdit: 1,
                VisibleNew: 1,
                DefaultOrder: 0,
                Type: 'ReferenceFieldSetting',
            },
            {
                DateTimeMode: 2,
                Name: 'CreationDate',
                FieldClassName: 'SenseNet.ContentRepository.Fields.DateTimeField',
                DisplayName: 'Creation date',
                Description: 'Content creation date.',
                ReadOnly: false,
                Compulsory: false,
                OutputMethod: 0,
                Visible: false,
                VisibleBrowse: 1,
                VisibleEdit: 1,
                VisibleNew: 1,
                DefaultOrder: 0,
                Type: 'DateTimeFieldSetting',
            },
            {
                Name: 'ModifiedBy',
                FieldClassName: 'SenseNet.ContentRepository.Fields.ReferenceField',
                DisplayName: 'Modified By',
                Description: 'Content was last modified by this user.',
                ReadOnly: false,
                Compulsory: false,
                OutputMethod: 0,
                Visible: false,
                VisibleBrowse: 1,
                VisibleEdit: 1,
                VisibleNew: 1,
                DefaultOrder: 0,
                Type: 'ReferenceFieldSetting',
            },
            {
                DateTimeMode: 2,
                Name: 'ModificationDate',
                FieldClassName: 'SenseNet.ContentRepository.Fields.DateTimeField',
                DisplayName: 'Modification Date',
                Description: 'Content was last modified on this date.',
                ReadOnly: false,
                Compulsory: false,
                OutputMethod: 0,
                Visible: false,
                VisibleBrowse: 1,
                VisibleEdit: 1,
                VisibleNew: 1,
                DefaultOrder: 0,
                Type: 'DateTimeFieldSetting',
            },
            {
                AllowExtraValue: false,
                AllowMultiple: false,
                Options: [
                    {
                        Value: '0',
                        Text: 'Inherited',
                        StoredText: '$Ctd-GenericContent,ApprovingMode-0',
                        Enabled: true,
                        Selected: true,
                    },
                    {
                        Value: '1',
                        Text: 'Off',
                        StoredText: '$Ctd-GenericContent,ApprovingMode-1',
                        Enabled: true,
                        Selected: false,
                    },
                    {
                        Value: '2',
                        Text: 'On',
                        StoredText: '$Ctd-GenericContent,ApprovingMode-2',
                        Enabled: true,
                        Selected: false,
                    },
                ],
                DisplayChoice: 0,
                EnumTypeName: '',
                Name: 'ApprovingMode',
                FieldClassName: 'SenseNet.ContentRepository.Fields.ApprovingModeField',
                DisplayName: 'Content Approval For Current Content',
                Description: 'It shows the approval mode of the current content.',
                ReadOnly: false,
                Compulsory: false,
                OutputMethod: 0,
                Visible: false,
                VisibleBrowse: 1,
                VisibleEdit: 1,
                VisibleNew: 1,
                DefaultOrder: 0,
                Type: 'ChoiceFieldSetting',
            },
            {
                AllowExtraValue: false,
                AllowMultiple: false,
                Options: [
                    {
                        Value: '0',
                        Text: 'Inherited',
                        StoredText: '$Ctd-GenericContent,InheritableApprovingMode-0',
                        Enabled: true,
                        Selected: true,
                    },
                    {
                        Value: '1',
                        Text: 'Off',
                        StoredText: '$Ctd-GenericContent,InheritableApprovingMode-1',
                        Enabled: true,
                        Selected: false,
                    },
                    {
                        Value: '2',
                        Text: 'On',
                        StoredText: '$Ctd-GenericContent,InheritableApprovingMode-2',
                        Enabled: true,
                        Selected: false,
                    },
                ],
                DisplayChoice: 0,
                EnumTypeName: '',
                Name: 'InheritableApprovingMode',
                FieldClassName: 'SenseNet.ContentRepository.Fields.InheritableApprovingModeField',
                DisplayName: 'Content approval',
                Description: 'Specify whether new or changed content below the current one should remain in a draft state until they have been approved.',
                ReadOnly: false,
                Compulsory: false,
                OutputMethod: 0,
                Visible: false,
                VisibleBrowse: 1,
                VisibleEdit: 1,
                VisibleNew: 1,
                DefaultOrder: 0,
                ControlHint: 'sn:ApprovingModeChoice',
                Type: 'ChoiceFieldSetting',
            },
            {
                Name: 'Locked',
                FieldClassName: 'SenseNet.ContentRepository.Fields.BooleanField',
                DisplayName: 'Locked',
                Description: 'It shows whether the content is checked out or not.',
                ReadOnly: true,
                Compulsory: false,
                OutputMethod: 0,
                Visible: false,
                VisibleBrowse: 1,
                VisibleEdit: 1,
                VisibleNew: 1,
                DefaultOrder: 0,
                Type: 'NullFieldSetting',
            },
            {
                Name: 'CheckedOutTo',
                FieldClassName: 'SenseNet.ContentRepository.Fields.ReferenceField',
                DisplayName: 'Checked Out To',
                Description: 'The user currently locking the content.',
                ReadOnly: true,
                Compulsory: false,
                OutputMethod: 0,
                Visible: false,
                VisibleBrowse: 1,
                VisibleEdit: 1,
                VisibleNew: 1,
                DefaultOrder: 0,
                Type: 'ReferenceFieldSetting',
            },
            {
                Name: 'TrashDisabled',
                FieldClassName: 'SenseNet.ContentRepository.Fields.BooleanField',
                DisplayName: 'Disable Trash',
                Description: 'You can disable trash for this content and its children. If set, you can not restore deleted content.',
                ReadOnly: false,
                Compulsory: false,
                OutputMethod: 0,
                DefaultValue: 'false',
                Visible: false,
                VisibleBrowse: 1,
                VisibleEdit: 1,
                VisibleNew: 1,
                DefaultOrder: 0,
                Type: 'NullFieldSetting',
            },
            {
                AllowExtraValue: false,
                AllowMultiple: false,
                Options: [
                    {
                        Value: '0',
                        Text: 'Finalized',
                        StoredText: '$Ctd,Enum-GenericContent-SavingState-Finalized',
                        Enabled: true,
                        Selected: false,
                    },
                    {
                        Value: '1',
                        Text: 'Creating',
                        StoredText: '$Ctd,Enum-GenericContent-SavingState-Creating',
                        Enabled: true,
                        Selected: false,
                    },
                    {
                        Value: '2',
                        Text: 'Modifying',
                        StoredText: '$Ctd,Enum-GenericContent-SavingState-Modifying',
                        Enabled: true,
                        Selected: false,
                    },
                    {
                        Value: '3',
                        Text: 'ModifyingLocked',
                        StoredText: '$Ctd,Enum-GenericContent-SavingState-ModifyingLocked',
                        Enabled: true,
                        Selected: false,
                    },
                ],
                DisplayChoice: 0,
                EnumTypeName: 'SenseNet.ContentRepository.Storage.ContentSavingState',
                Name: 'SavingState',
                FieldClassName: 'SenseNet.ContentRepository.Fields.ChoiceField',
                DisplayName: 'Saving state',
                Description: 'State of multi-step saving.',
                ReadOnly: true,
                Compulsory: false,
                OutputMethod: 0,
                Visible: false,
                VisibleBrowse: 2,
                VisibleEdit: 1,
                VisibleNew: 1,
                DefaultOrder: 0,
                Type: 'ChoiceFieldSetting',
            },
            {
                Name: 'ExtensionData',
                FieldClassName: 'SenseNet.ContentRepository.Fields.LongTextField',
                DisplayName: 'Extension data',
                Description: 'You can set extra data in this field which is useful when extending a content.',
                ReadOnly: false,
                Compulsory: false,
                OutputMethod: 0,
                Visible: false,
                VisibleBrowse: 1,
                VisibleEdit: 1,
                VisibleNew: 1,
                DefaultOrder: 0,
                Type: 'LongTextFieldSetting',
            },
            {
                AllowMultiple: false,
                Name: 'BrowseApplication',
                FieldClassName: 'SenseNet.ContentRepository.Fields.ReferenceField',
                DisplayName: 'Reference To Browse Application',
                Description: 'Set this, if you would like to override the default browse application.',
                ReadOnly: false,
                Compulsory: false,
                OutputMethod: 0,
                Visible: false,
                VisibleBrowse: 1,
                VisibleEdit: 1,
                VisibleNew: 1,
                DefaultOrder: 0,
                Type: 'ReferenceFieldSetting',
            },
            {
                Name: 'Approvable',
                FieldClassName: 'SenseNet.ContentRepository.Fields.BooleanField',
                DisplayName: 'Approvable By Current User',
                Description: 'This fileld is true if the content is in \'pending\' state and can be approved by the current user.',
                ReadOnly: true,
                Compulsory: false,
                OutputMethod: 0,
                Visible: false,
                VisibleBrowse: 1,
                VisibleEdit: 1,
                VisibleNew: 1,
                DefaultOrder: 0,
                Type: 'NullFieldSetting',
            },
            {
                Name: 'IsTaggable',
                FieldClassName: 'SenseNet.ContentRepository.Fields.BooleanField',
                DisplayName: 'Enable Tagging',
                Description: 'Specify whether you would like to enable tagging capability for this content.',
                ReadOnly: false,
                Compulsory: false,
                OutputMethod: 0,
                DefaultValue: 'false',
                Visible: false,
                VisibleBrowse: 1,
                VisibleEdit: 1,
                VisibleNew: 1,
                DefaultOrder: 0,
                Type: 'NullFieldSetting',
            },
            {
                Name: 'Tags',
                FieldClassName: 'SenseNet.ContentRepository.Fields.LongTextField',
                DisplayName: 'Tags',
                Description: 'List of tags and creators of them separated by commas.',
                ReadOnly: false,
                Compulsory: false,
                OutputMethod: 0,
                Visible: false,
                VisibleBrowse: 1,
                VisibleEdit: 1,
                VisibleNew: 1,
                DefaultOrder: 0,
                ControlHint: 'sn:TagList',
                Type: 'LongTextFieldSetting',
            },
            {
                Name: 'IsRateable',
                FieldClassName: 'SenseNet.ContentRepository.Fields.BooleanField',
                DisplayName: 'Enable Rating',
                Description: 'Specify whether you would like to enable rating capability for this content.',
                ReadOnly: false,
                Compulsory: false,
                OutputMethod: 0,
                DefaultValue: 'false',
                Visible: false,
                VisibleBrowse: 1,
                VisibleEdit: 1,
                VisibleNew: 1,
                DefaultOrder: 0,
                Type: 'NullFieldSetting',
            },
            {
                Name: 'RateStr',
                FieldClassName: 'SenseNet.ContentRepository.Fields.ShortTextField',
                DisplayName: 'Raw value of rating',
                Description: '',
                ReadOnly: false,
                Compulsory: false,
                OutputMethod: 0,
                Visible: false,
                VisibleBrowse: 1,
                VisibleEdit: 1,
                VisibleNew: 1,
                DefaultOrder: 0,
                Type: 'ShortTextFieldSetting',
            },
            {
                Name: 'RateAvg',
                FieldClassName: 'SenseNet.ContentRepository.Fields.NumberField',
                DisplayName: 'Average rate',
                Description: 'Average rate of the content.',
                ReadOnly: false,
                Compulsory: false,
                OutputMethod: 0,
                Visible: false,
                VisibleBrowse: 1,
                VisibleEdit: 1,
                VisibleNew: 1,
                DefaultOrder: 0,
                Type: 'NumberFieldSetting',
            },
            {
                Name: 'RateCount',
                FieldClassName: 'SenseNet.ContentRepository.Fields.IntegerField',
                DisplayName: 'Rate count',
                Description: 'Count of rates.',
                ReadOnly: false,
                Compulsory: false,
                OutputMethod: 0,
                Visible: false,
                VisibleBrowse: 1,
                VisibleEdit: 1,
                VisibleNew: 1,
                DefaultOrder: 0,
                Type: 'IntegerFieldSetting',
            },
            {
                Range: 5,
                Split: 1,
                Name: 'Rate',
                FieldClassName: 'SenseNet.ContentRepository.Fields.RatingField',
                DisplayName: 'Rate',
                Description: '',
                ReadOnly: false,
                Compulsory: false,
                OutputMethod: 0,
                Visible: false,
                VisibleBrowse: 1,
                VisibleEdit: 1,
                VisibleNew: 1,
                DefaultOrder: 0,
                Type: 'RatingFieldSetting',
            },
            {
                Name: 'Publishable',
                FieldClassName: 'SenseNet.ContentRepository.Fields.BooleanField',
                DisplayName: 'Publishable By Current User',
                Description: 'This fileld is true if the content can be published by the current user.',
                ReadOnly: true,
                Compulsory: false,
                OutputMethod: 0,
                Visible: false,
                VisibleBrowse: 1,
                VisibleEdit: 1,
                VisibleNew: 1,
                DefaultOrder: 0,
                Type: 'NullFieldSetting',
            },
            {
                AllowMultiple: true,
                Name: 'Versions',
                FieldClassName: 'SenseNet.ContentRepository.Fields.ReferenceField',
                DisplayName: 'Versions',
                Description: 'Content version history.',
                ReadOnly: true,
                Compulsory: false,
                OutputMethod: 0,
                Visible: false,
                VisibleBrowse: 1,
                VisibleEdit: 1,
                VisibleNew: 1,
                DefaultOrder: 0,
                Type: 'ReferenceFieldSetting',
            },
            {
                Name: 'CheckInComments',
                FieldClassName: 'SenseNet.ContentRepository.Fields.LongTextField',
                DisplayName: 'Checkin comments',
                Description: 'Comments for a new version.',
                ReadOnly: false,
                Compulsory: false,
                OutputMethod: 0,
                Visible: false,
                VisibleBrowse: 1,
                VisibleEdit: 1,
                VisibleNew: 1,
                DefaultOrder: 0,
                Type: 'LongTextFieldSetting',
            },
            {
                Name: 'RejectReason',
                FieldClassName: 'SenseNet.ContentRepository.Fields.LongTextField',
                DisplayName: 'Reject reason',
                Description: 'The reason why the content was rejected.',
                ReadOnly: false,
                Compulsory: false,
                OutputMethod: 0,
                Visible: false,
                VisibleBrowse: 1,
                VisibleEdit: 1,
                VisibleNew: 1,
                DefaultOrder: 0,
                Type: 'LongTextFieldSetting',
            },
            {
                AllowMultiple: false,
                AllowedTypes: [
                    'Workspace',
                ],
                Name: 'Workspace',
                FieldClassName: 'SenseNet.ContentRepository.Fields.ReferenceField',
                DisplayName: 'Workspace',
                Description: 'The container workspace of the content.',
                ReadOnly: true,
                Compulsory: false,
                OutputMethod: 0,
                Visible: false,
                VisibleBrowse: 1,
                VisibleEdit: 1,
                VisibleNew: 1,
                DefaultOrder: 0,
                Type: 'ReferenceFieldSetting',
            },
            {
                Name: 'BrowseUrl',
                FieldClassName: 'SenseNet.ContentRepository.Fields.ShortTextField',
                DisplayName: 'Browse url',
                Description: '',
                ReadOnly: true,
                Compulsory: false,
                OutputMethod: 0,
                Visible: false,
                VisibleBrowse: 1,
                VisibleEdit: 1,
                VisibleNew: 1,
                DefaultOrder: 0,
                Type: 'ShortTextFieldSetting',
            },
        ],
    },
    {
        ContentTypeName: 'File',
        DisplayName: 'File',
        Description: 'A type for binary documents, images, etc.',
        Icon: 'File',
        ParentTypeName: 'GenericContent',
        AllowIndexing: true,
        AllowIncrementalNaming: false,
        AllowedChildTypes: [],
        FieldSettings: [
            {
                Name: 'Binary',
                FieldClassName: 'SenseNet.ContentRepository.Fields.BinaryField',
                DisplayName: 'Binary',
                Description: 'The binary content of the document.',
                ReadOnly: false,
                Compulsory: false,
                OutputMethod: 0,
                Visible: false,
                VisibleBrowse: 0,
                VisibleEdit: 1,
                VisibleNew: 1,
                DefaultOrder: 0,
                Type: 'BinaryFieldSetting',
            },
            {
                Name: 'Name',
                FieldClassName: 'SenseNet.ContentRepository.Fields.ShortTextField',
                DisplayName: 'Name',
                Description: 'Specify a name that will appear in the address bar of the browser.',
                ReadOnly: false,
                Compulsory: true,
                OutputMethod: 0,
                Visible: true,
                VisibleBrowse: 0,
                VisibleEdit: 1,
                VisibleNew: 1,
                DefaultOrder: 0,
                ControlHint: 'sn:Name',
                Type: 'ShortTextFieldSetting',
            },
            {
                Name: 'DisplayName',
                FieldClassName: 'SenseNet.ContentRepository.Fields.ShortTextField',
                DisplayName: 'Display Name',
                Description: 'Content name. You can set any name you prefer without any restrictions.',
                ReadOnly: false,
                Compulsory: false,
                OutputMethod: 0,
                Visible: false,
                VisibleBrowse: 1,
                VisibleEdit: 0,
                VisibleNew: 0,
                DefaultOrder: 0,
                ControlHint: 'sn:FileName',
                Type: 'ShortTextFieldSetting',
            },
            {
                Name: 'ModifiedBy',
                FieldClassName: 'SenseNet.ContentRepository.Fields.ReferenceField',
                DisplayName: 'Modified By',
                Description: 'Content was last modified by this user.',
                ReadOnly: false,
                Compulsory: false,
                OutputMethod: 0,
                Visible: false,
                VisibleBrowse: 2,
                VisibleEdit: 1,
                VisibleNew: 1,
                DefaultOrder: 0,
                Type: 'ReferenceFieldSetting',
            },
            {
                DateTimeMode: 2,
                Name: 'ModificationDate',
                FieldClassName: 'SenseNet.ContentRepository.Fields.DateTimeField',
                DisplayName: 'Modification Date',
                Description: 'Content was last modified on this date.',
                ReadOnly: false,
                Compulsory: false,
                OutputMethod: 0,
                Visible: false,
                VisibleBrowse: 2,
                VisibleEdit: 1,
                VisibleNew: 1,
                DefaultOrder: 0,
                Type: 'DateTimeFieldSetting',
            },
            {
                Name: 'VersionModifiedBy',
                FieldClassName: 'SenseNet.ContentRepository.Fields.ReferenceField',
                DisplayName: 'Version is Modified By',
                Description: 'Version was last modified by this user.',
                ReadOnly: false,
                Compulsory: false,
                OutputMethod: 0,
                Visible: false,
                VisibleBrowse: 2,
                VisibleEdit: 1,
                VisibleNew: 1,
                DefaultOrder: 0,
                Type: 'ReferenceFieldSetting',
            },
            {
                DateTimeMode: 2,
                Name: 'VersionModificationDate',
                FieldClassName: 'SenseNet.ContentRepository.Fields.DateTimeField',
                DisplayName: 'Versions Modification Date',
                Description: 'Version was last modified on this date.',
                ReadOnly: false,
                Compulsory: false,
                OutputMethod: 0,
                Visible: false,
                VisibleBrowse: 2,
                VisibleEdit: 1,
                VisibleNew: 1,
                DefaultOrder: 0,
                Type: 'DateTimeFieldSetting',
            },
            {
                Name: 'Locked',
                FieldClassName: 'SenseNet.ContentRepository.Fields.BooleanField',
                DisplayName: 'Locked',
                Description: 'It shows whether the content is checked out or not.',
                ReadOnly: true,
                Compulsory: false,
                OutputMethod: 0,
                Visible: false,
                VisibleBrowse: 2,
                VisibleEdit: 1,
                VisibleNew: 1,
                DefaultOrder: 0,
                Type: 'NullFieldSetting',
            },
            {
                Name: 'Size',
                FieldClassName: 'SenseNet.ContentRepository.Fields.NumberField',
                DisplayName: 'Size',
                Description: 'Size of the binary document.',
                ReadOnly: true,
                Compulsory: false,
                OutputMethod: 0,
                Visible: false,
                VisibleBrowse: 1,
                VisibleEdit: 1,
                VisibleNew: 1,
                DefaultOrder: 0,
                Type: 'NumberFieldSetting',
            },
            {
                Name: 'FullSize',
                FieldClassName: 'SenseNet.ContentRepository.Fields.NumberField',
                DisplayName: 'Full size',
                Description: 'The total amount of space the Document occupies, counting all versions.',
                ReadOnly: true,
                Compulsory: false,
                OutputMethod: 0,
                Visible: false,
                VisibleBrowse: 1,
                VisibleEdit: 1,
                VisibleNew: 1,
                DefaultOrder: 0,
                Type: 'NumberFieldSetting',
            },
            {
                Name: 'PageCount',
                FieldClassName: 'SenseNet.ContentRepository.Fields.IntegerField',
                DisplayName: 'Page count',
                Description: 'Read-only field for storing the number of pages in the document. It is filled by the document preview generator.',
                ReadOnly: false,
                Compulsory: false,
                OutputMethod: 0,
                DefaultValue: '-4',
                Visible: false,
                VisibleBrowse: 0,
                VisibleEdit: 1,
                VisibleNew: 1,
                DefaultOrder: 0,
                Type: 'IntegerFieldSetting',
            },
            {
                Name: 'MimeType',
                FieldClassName: 'SenseNet.ContentRepository.Fields.ShortTextField',
                DisplayName: 'Document MIME type',
                ReadOnly: true,
                Compulsory: false,
                OutputMethod: 0,
                Visible: false,
                VisibleBrowse: 1,
                VisibleEdit: 1,
                VisibleNew: 1,
                DefaultOrder: 0,
                Type: 'ShortTextFieldSetting',
            },
            {
                Name: 'Version',
                FieldClassName: 'SenseNet.ContentRepository.Fields.VersionField',
                DisplayName: 'Version',
                Description: 'Version number.',
                ReadOnly: true,
                Compulsory: false,
                OutputMethod: 0,
                Visible: false,
                VisibleBrowse: 0,
                VisibleEdit: 1,
                VisibleNew: 1,
                DefaultOrder: 0,
                Type: 'NullFieldSetting',
            },
            {
                Name: 'Description',
                FieldClassName: 'SenseNet.ContentRepository.Fields.LongTextField',
                DisplayName: 'Description',
                Description: 'Description of the content.',
                ReadOnly: false,
                Compulsory: false,
                OutputMethod: 0,
                Visible: false,
                VisibleBrowse: 2,
                VisibleEdit: 1,
                VisibleNew: 1,
                DefaultOrder: 0,
                ControlHint: 'sn:RichText',
                Type: 'LongTextFieldSetting',
            },
            {
                Name: 'Shapes',
                FieldClassName: 'SenseNet.ContentRepository.Fields.LongTextField',
                DisplayName: 'Shapes',
                Description: 'Stores data used for document preview (redaction, highlight, annotation shapes). This value can be modified by the document preview plugin.',
                ReadOnly: false,
                Compulsory: false,
                OutputMethod: 0,
                Visible: false,
                VisibleBrowse: 2,
                VisibleEdit: 1,
                VisibleNew: 1,
                DefaultOrder: 0,
                Type: 'LongTextFieldSetting',
            },
            {
                Name: 'PageAttributes',
                FieldClassName: 'SenseNet.ContentRepository.Fields.LongTextField',
                DisplayName: 'Page attributes',
                Description: 'Stores data used for document preview (for example page rotation). This value can be modified by the document preview plugin.',
                ReadOnly: false,
                Compulsory: false,
                OutputMethod: 0,
                Visible: false,
                VisibleBrowse: 2,
                VisibleEdit: 1,
                VisibleNew: 1,
                DefaultOrder: 0,
                Type: 'LongTextFieldSetting',
            },
            {
                Name: 'Watermark',
                FieldClassName: 'SenseNet.ContentRepository.Fields.ShortTextField',
                DisplayName: 'Watermark',
                Description: 'The text that is displayed as a watermark on the document preview. The format can be set by modifying the Document Preview settings.',
                ReadOnly: false,
                Compulsory: false,
                OutputMethod: 0,
                Visible: false,
                VisibleBrowse: 2,
                VisibleEdit: 2,
                VisibleNew: 2,
                DefaultOrder: 0,
                Type: 'ShortTextFieldSetting',
            },
        ],
    },
    {
        ContentTypeName: 'Image',
        DisplayName: 'Image',
        Description: 'A special Document type for storing images.',
        Icon: 'Image',
        ParentTypeName: 'File',
        AllowIndexing: true,
        AllowIncrementalNaming: false,
        AllowedChildTypes: [],
        FieldSettings: [
            {
                Name: 'Keywords',
                FieldClassName: 'SenseNet.ContentRepository.Fields.LongTextField',
                DisplayName: 'Keywords',
                Description: 'Keywords describing the image.',
                ReadOnly: false,
                Compulsory: false,
                OutputMethod: 0,
                Visible: true,
                VisibleBrowse: 0,
                VisibleEdit: 0,
                VisibleNew: 0,
                DefaultOrder: 0,
                Type: 'LongTextFieldSetting',
            },
            {
                DateTimeMode: 2,
                Name: 'DateTaken',
                FieldClassName: 'SenseNet.ContentRepository.Fields.DateTimeField',
                DisplayName: 'Date taken',
                Description: 'Date the photo was taken, if applicable.',
                ReadOnly: false,
                Compulsory: false,
                OutputMethod: 0,
                Visible: true,
                VisibleBrowse: 0,
                VisibleEdit: 0,
                VisibleNew: 0,
                DefaultOrder: 0,
                Type: 'DateTimeFieldSetting',
            },
            {
                Name: 'Index',
                FieldClassName: 'SenseNet.ContentRepository.Fields.IntegerField',
                DisplayName: 'Index',
                Description: 'Content order in navigation. Numbers closer to 0 will appear first.',
                ReadOnly: false,
                Compulsory: false,
                OutputMethod: 0,
                Visible: false,
                VisibleBrowse: 2,
                VisibleEdit: 2,
                VisibleNew: 2,
                DefaultOrder: 0,
                Type: 'IntegerFieldSetting',
            },
            {
                Name: 'Version',
                FieldClassName: 'SenseNet.ContentRepository.Fields.VersionField',
                DisplayName: 'Version',
                Description: 'Version number.',
                ReadOnly: true,
                Compulsory: false,
                OutputMethod: 0,
                Visible: false,
                VisibleBrowse: 1,
                VisibleEdit: 1,
                VisibleNew: 1,
                DefaultOrder: 0,
                Type: 'NullFieldSetting',
            },
            {
                Name: 'Width',
                FieldClassName: 'SenseNet.ContentRepository.Fields.IntegerField',
                DisplayName: 'Width',
                ReadOnly: true,
                Compulsory: false,
                OutputMethod: 0,
                Visible: true,
                VisibleBrowse: 0,
                VisibleEdit: 0,
                VisibleNew: 0,
                DefaultOrder: 0,
                Type: 'IntegerFieldSetting',
            },
            {
                Name: 'Height',
                FieldClassName: 'SenseNet.ContentRepository.Fields.IntegerField',
                DisplayName: 'Height',
                ReadOnly: true,
                Compulsory: false,
                OutputMethod: 0,
                Visible: true,
                VisibleBrowse: 0,
                VisibleEdit: 0,
                VisibleNew: 0,
                DefaultOrder: 0,
                Type: 'IntegerFieldSetting',
            },
        ],
    },
    {
        ContentTypeName: 'PreviewImage',
        DisplayName: 'Preview image',
        Description: 'A special content type for storing preview images.',
        Icon: 'Image',
        ParentTypeName: 'Image',
        AllowIndexing: false,
        AllowIncrementalNaming: false,
        AllowedChildTypes: [],
        FieldSettings: [],
    },
    {
        ContentTypeName: 'Folder',
        DisplayName: 'Folder',
        Description: 'Use folders to group content.',
        Icon: 'Folder',
        ParentTypeName: 'GenericContent',
        AllowIndexing: true,
        AllowIncrementalNaming: false,
        AllowedChildTypes: [],
        FieldSettings: [
            {
                Name: 'DisplayName',
                FieldClassName: 'SenseNet.ContentRepository.Fields.ShortTextField',
                DisplayName: 'Folder name',
                Description: 'Display name of the content. You can set any name you prefer without any restrictions.',
                ReadOnly: false,
                Compulsory: false,
                OutputMethod: 0,
                Visible: true,
                VisibleBrowse: 0,
                VisibleEdit: 0,
                VisibleNew: 0,
                DefaultOrder: 0,
                ControlHint: 'sn:DisplayName',
                Type: 'ShortTextFieldSetting',
            },
            {
                Name: 'Description',
                FieldClassName: 'SenseNet.ContentRepository.Fields.LongTextField',
                DisplayName: 'Description',
                Description: 'Description of the content.',
                ReadOnly: false,
                Compulsory: false,
                OutputMethod: 0,
                Visible: false,
                VisibleBrowse: 1,
                VisibleEdit: 1,
                VisibleNew: 1,
                DefaultOrder: 0,
                ControlHint: 'sn:RichText',
                Type: 'LongTextFieldSetting',
            },
            {
                Name: 'Version',
                FieldClassName: 'SenseNet.ContentRepository.Fields.VersionField',
                DisplayName: 'Version',
                Description: 'Version number.',
                ReadOnly: true,
                Compulsory: false,
                OutputMethod: 0,
                Visible: false,
                VisibleBrowse: 1,
                VisibleEdit: 1,
                VisibleNew: 1,
                DefaultOrder: 0,
                Type: 'NullFieldSetting',
            },
            {
                Name: 'Index',
                FieldClassName: 'SenseNet.ContentRepository.Fields.IntegerField',
                DisplayName: 'Index',
                Description: 'Content order in navigation. Numbers closer to 0 will appear first.',
                ReadOnly: false,
                Compulsory: false,
                OutputMethod: 0,
                Visible: false,
                VisibleBrowse: 1,
                VisibleEdit: 1,
                VisibleNew: 1,
                DefaultOrder: 0,
                Type: 'IntegerFieldSetting',
            },
            {
                Name: 'Name',
                FieldClassName: 'SenseNet.ContentRepository.Fields.ShortTextField',
                DisplayName: 'Name',
                Description: 'Specify a name that will appear in the address bar of the browser.',
                ReadOnly: false,
                Compulsory: true,
                OutputMethod: 0,
                Visible: false,
                VisibleBrowse: 1,
                VisibleEdit: 1,
                VisibleNew: 1,
                DefaultOrder: 0,
                ControlHint: 'sn:Name',
                Type: 'ShortTextFieldSetting',
            },
        ],
    },
]

export const testRepository = new Repository({
    repositoryUrl: 'someurl',
    requiredSelect: ['Id', 'Path', 'Name', 'Type', 'ParentId', 'DisplayName'] as any,
    schemas: customSchema,
    sessionLifetime: 'expiration'
})
export const testFieldsOfAContent = {}
export const testFolder = {
    Id: 1,
    Name: 'LoremIpsum',
    DisplayName: 'Lorem Ipsum',
} as Folder

export const testFile = {
    Id: 1,
    Name: 'LoremIpsum.docx',
    DisplayName: 'LoremIpsum.docx',
    Path: '/Root/Profiles/MyProfile/DocumentLibrary',
    Watermark: 'sensenet',
    Type: 'File',
    Index: 42,
    Description: 'Lorem ipsum dolor sit amet, consectetur adipiscing elit. Duis nec iaculis lectus, sed blandit urna. Nullam in auctor odio, eu eleifend diam. Curabitur rutrum ullamcorper nunc, sit amet consectetur turpis elementum ac. Aenean lorem lorem, feugiat sit amet sem at, accumsan cursus leo.'
} as File

const newViewNotes = require('../notes/viewcontrols/NewView.md')
const editViewNotes = require('../notes/viewcontrols/EditView.md')
const browseViewNotes = require('../notes/viewcontrols/BrowseView.md')

const sensenet = Reducers.sensenet
export const testStore = createStore(combineReducers({ sensenet }))

addDecorator(muiTheme())

storiesOf("ViewControls", module).addDecorator(withKnobs).addDecorator(checkA11y).addDecorator(withInfo())
    .add(
        "new view", withMarkdownNotes(newViewNotes)
            (() => (
                <NewView
                    store={testStore}
                    path='/Root/Profiles/MyProfile/DocumentLibrary'
                    repository={testRepository}
                    contentTypeName='File'
                    title={text('Title', 'File')}
                    extension={text('Extension', 'docx')} />
            )),
    )
    .add(
        "edit view", withMarkdownNotes(editViewNotes)
            (() => (
                <EditView
                    content={object('Content', testFile)}
                    repository={testRepository}
                    contentTypeName='File' />
            )),
    )
    .add(
        "browse view", withMarkdownNotes(browseViewNotes)
            (() => (
                <BrowseView
                    content={object('Content', testFile)}
                    repository={testRepository} />
            ))
    )
